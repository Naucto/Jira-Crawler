# Generated by ariadne-codegen

from .base_operation import GraphQLField


class AbortQueuedMigrationsPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AbortQueuedMigrationsPayloadGraphQLField":
        self._alias = alias
        return self


class AbortRepositoryMigrationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AbortRepositoryMigrationPayloadGraphQLField":
        self._alias = alias
        return self


class AcceptEnterpriseAdministratorInvitationPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "AcceptEnterpriseAdministratorInvitationPayloadGraphQLField":
        self._alias = alias
        return self


class AcceptEnterpriseMemberInvitationPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "AcceptEnterpriseMemberInvitationPayloadGraphQLField":
        self._alias = alias
        return self


class AcceptTopicSuggestionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AcceptTopicSuggestionPayloadGraphQLField":
        self._alias = alias
        return self


class AccessUserNamespaceRepositoryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AccessUserNamespaceRepositoryPayloadGraphQLField":
        self._alias = alias
        return self


class ActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ActorGraphQLField":
        self._alias = alias
        return self


class ActorConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ActorConnectionGraphQLField":
        self._alias = alias
        return self


class ActorEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ActorEdgeGraphQLField":
        self._alias = alias
        return self


class ActorLocationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ActorLocationGraphQLField":
        self._alias = alias
        return self


class AddAssigneesToAssignablePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddAssigneesToAssignablePayloadGraphQLField":
        self._alias = alias
        return self


class AddCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddCommentPayloadGraphQLField":
        self._alias = alias
        return self


class AddDiscussionCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddDiscussionCommentPayloadGraphQLField":
        self._alias = alias
        return self


class AddDiscussionPollVotePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddDiscussionPollVotePayloadGraphQLField":
        self._alias = alias
        return self


class AddEnterpriseOrganizationMemberPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddEnterpriseOrganizationMemberPayloadGraphQLField":
        self._alias = alias
        return self


class AddEnterpriseSupportEntitlementPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddEnterpriseSupportEntitlementPayloadGraphQLField":
        self._alias = alias
        return self


class AddLabelsToLabelablePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddLabelsToLabelablePayloadGraphQLField":
        self._alias = alias
        return self


class AddProjectCardPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddProjectCardPayloadGraphQLField":
        self._alias = alias
        return self


class AddProjectColumnPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddProjectColumnPayloadGraphQLField":
        self._alias = alias
        return self


class AddProjectV2DraftIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddProjectV2DraftIssuePayloadGraphQLField":
        self._alias = alias
        return self


class AddProjectV2ItemByIdPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddProjectV2ItemByIdPayloadGraphQLField":
        self._alias = alias
        return self


class AddPullRequestReviewCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddPullRequestReviewCommentPayloadGraphQLField":
        self._alias = alias
        return self


class AddPullRequestReviewPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddPullRequestReviewPayloadGraphQLField":
        self._alias = alias
        return self


class AddPullRequestReviewThreadPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddPullRequestReviewThreadPayloadGraphQLField":
        self._alias = alias
        return self


class AddPullRequestReviewThreadReplyPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddPullRequestReviewThreadReplyPayloadGraphQLField":
        self._alias = alias
        return self


class AddReactionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddReactionPayloadGraphQLField":
        self._alias = alias
        return self


class AddStarPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddStarPayloadGraphQLField":
        self._alias = alias
        return self


class AddSubIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddSubIssuePayloadGraphQLField":
        self._alias = alias
        return self


class AddUpvotePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddUpvotePayloadGraphQLField":
        self._alias = alias
        return self


class AddVerifiableDomainPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddVerifiableDomainPayloadGraphQLField":
        self._alias = alias
        return self


class AddedToMergeQueueEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddedToMergeQueueEventGraphQLField":
        self._alias = alias
        return self


class AddedToProjectEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddedToProjectEventGraphQLField":
        self._alias = alias
        return self


class AnnouncementBannerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AnnouncementBannerGraphQLField":
        self._alias = alias
        return self


class AppGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AppGraphQLField":
        self._alias = alias
        return self


class ApproveDeploymentsPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApproveDeploymentsPayloadGraphQLField":
        self._alias = alias
        return self


class ApproveVerifiableDomainPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApproveVerifiableDomainPayloadGraphQLField":
        self._alias = alias
        return self


class ArchiveProjectV2ItemPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ArchiveProjectV2ItemPayloadGraphQLField":
        self._alias = alias
        return self


class ArchiveRepositoryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ArchiveRepositoryPayloadGraphQLField":
        self._alias = alias
        return self


class AssignableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssignableGraphQLField":
        self._alias = alias
        return self


class AssignedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssignedEventGraphQLField":
        self._alias = alias
        return self


class AssigneeUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "AssigneeUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "AssigneeUnion":
        self._alias = alias
        return self


class AssigneeConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssigneeConnectionGraphQLField":
        self._alias = alias
        return self


class AssigneeEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssigneeEdgeGraphQLField":
        self._alias = alias
        return self


class AuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AuditEntryGraphQLField":
        self._alias = alias
        return self


class AuditEntryActorUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "AuditEntryActorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "AuditEntryActorUnion":
        self._alias = alias
        return self


class AutoMergeDisabledEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoMergeDisabledEventGraphQLField":
        self._alias = alias
        return self


class AutoMergeEnabledEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoMergeEnabledEventGraphQLField":
        self._alias = alias
        return self


class AutoMergeRequestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoMergeRequestGraphQLField":
        self._alias = alias
        return self


class AutoRebaseEnabledEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoRebaseEnabledEventGraphQLField":
        self._alias = alias
        return self


class AutoSquashEnabledEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoSquashEnabledEventGraphQLField":
        self._alias = alias
        return self


class AutomaticBaseChangeFailedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutomaticBaseChangeFailedEventGraphQLField":
        self._alias = alias
        return self


class AutomaticBaseChangeSucceededEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutomaticBaseChangeSucceededEventGraphQLField":
        self._alias = alias
        return self


class BaseRefChangedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BaseRefChangedEventGraphQLField":
        self._alias = alias
        return self


class BaseRefDeletedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BaseRefDeletedEventGraphQLField":
        self._alias = alias
        return self


class BaseRefForcePushedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BaseRefForcePushedEventGraphQLField":
        self._alias = alias
        return self


class BlameGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BlameGraphQLField":
        self._alias = alias
        return self


class BlameRangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BlameRangeGraphQLField":
        self._alias = alias
        return self


class BlobGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BlobGraphQLField":
        self._alias = alias
        return self


class BotGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BotGraphQLField":
        self._alias = alias
        return self


class BranchActorAllowanceActorUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "BranchActorAllowanceActorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "BranchActorAllowanceActorUnion":
        self._alias = alias
        return self


class BranchNamePatternParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BranchNamePatternParametersGraphQLField":
        self._alias = alias
        return self


class BranchProtectionRuleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BranchProtectionRuleGraphQLField":
        self._alias = alias
        return self


class BranchProtectionRuleConflictGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BranchProtectionRuleConflictGraphQLField":
        self._alias = alias
        return self


class BranchProtectionRuleConflictConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BranchProtectionRuleConflictConnectionGraphQLField":
        self._alias = alias
        return self


class BranchProtectionRuleConflictEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BranchProtectionRuleConflictEdgeGraphQLField":
        self._alias = alias
        return self


class BranchProtectionRuleConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BranchProtectionRuleConnectionGraphQLField":
        self._alias = alias
        return self


class BranchProtectionRuleEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BranchProtectionRuleEdgeGraphQLField":
        self._alias = alias
        return self


class BypassActorUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "BypassActorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "BypassActorUnion":
        self._alias = alias
        return self


class BypassForcePushAllowanceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BypassForcePushAllowanceGraphQLField":
        self._alias = alias
        return self


class BypassForcePushAllowanceConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BypassForcePushAllowanceConnectionGraphQLField":
        self._alias = alias
        return self


class BypassForcePushAllowanceEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BypassForcePushAllowanceEdgeGraphQLField":
        self._alias = alias
        return self


class BypassPullRequestAllowanceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BypassPullRequestAllowanceGraphQLField":
        self._alias = alias
        return self


class BypassPullRequestAllowanceConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BypassPullRequestAllowanceConnectionGraphQLField":
        self._alias = alias
        return self


class BypassPullRequestAllowanceEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BypassPullRequestAllowanceEdgeGraphQLField":
        self._alias = alias
        return self


class CVSSGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CVSSGraphQLField":
        self._alias = alias
        return self


class CWEGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CWEGraphQLField":
        self._alias = alias
        return self


class CWEConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CWEConnectionGraphQLField":
        self._alias = alias
        return self


class CWEEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CWEEdgeGraphQLField":
        self._alias = alias
        return self


class CancelEnterpriseAdminInvitationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CancelEnterpriseAdminInvitationPayloadGraphQLField":
        self._alias = alias
        return self


class CancelEnterpriseMemberInvitationPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CancelEnterpriseMemberInvitationPayloadGraphQLField":
        self._alias = alias
        return self


class CancelSponsorshipPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CancelSponsorshipPayloadGraphQLField":
        self._alias = alias
        return self


class ChangeUserStatusPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChangeUserStatusPayloadGraphQLField":
        self._alias = alias
        return self


class CheckAnnotationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckAnnotationGraphQLField":
        self._alias = alias
        return self


class CheckAnnotationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckAnnotationConnectionGraphQLField":
        self._alias = alias
        return self


class CheckAnnotationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckAnnotationEdgeGraphQLField":
        self._alias = alias
        return self


class CheckAnnotationPositionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckAnnotationPositionGraphQLField":
        self._alias = alias
        return self


class CheckAnnotationSpanGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckAnnotationSpanGraphQLField":
        self._alias = alias
        return self


class CheckRunGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckRunGraphQLField":
        self._alias = alias
        return self


class CheckRunConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckRunConnectionGraphQLField":
        self._alias = alias
        return self


class CheckRunEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckRunEdgeGraphQLField":
        self._alias = alias
        return self


class CheckRunStateCountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckRunStateCountGraphQLField":
        self._alias = alias
        return self


class CheckStepGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckStepGraphQLField":
        self._alias = alias
        return self


class CheckStepConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckStepConnectionGraphQLField":
        self._alias = alias
        return self


class CheckStepEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckStepEdgeGraphQLField":
        self._alias = alias
        return self


class CheckSuiteGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckSuiteGraphQLField":
        self._alias = alias
        return self


class CheckSuiteConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckSuiteConnectionGraphQLField":
        self._alias = alias
        return self


class CheckSuiteEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CheckSuiteEdgeGraphQLField":
        self._alias = alias
        return self


class ClaimableUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "ClaimableUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ClaimableUnion":
        self._alias = alias
        return self


class ClearLabelsFromLabelablePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClearLabelsFromLabelablePayloadGraphQLField":
        self._alias = alias
        return self


class ClearProjectV2ItemFieldValuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClearProjectV2ItemFieldValuePayloadGraphQLField":
        self._alias = alias
        return self


class CloneProjectPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CloneProjectPayloadGraphQLField":
        self._alias = alias
        return self


class CloneTemplateRepositoryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CloneTemplateRepositoryPayloadGraphQLField":
        self._alias = alias
        return self


class ClosableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClosableGraphQLField":
        self._alias = alias
        return self


class CloseDiscussionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CloseDiscussionPayloadGraphQLField":
        self._alias = alias
        return self


class CloseIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CloseIssuePayloadGraphQLField":
        self._alias = alias
        return self


class ClosePullRequestPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClosePullRequestPayloadGraphQLField":
        self._alias = alias
        return self


class ClosedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ClosedEventGraphQLField":
        self._alias = alias
        return self


class CloserUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "CloserUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "CloserUnion":
        self._alias = alias
        return self


class CodeOfConductGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CodeOfConductGraphQLField":
        self._alias = alias
        return self


class CodeScanningParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CodeScanningParametersGraphQLField":
        self._alias = alias
        return self


class CodeScanningToolGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CodeScanningToolGraphQLField":
        self._alias = alias
        return self


class CommentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommentGraphQLField":
        self._alias = alias
        return self


class CommentDeletedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommentDeletedEventGraphQLField":
        self._alias = alias
        return self


class CommitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitGraphQLField":
        self._alias = alias
        return self


class CommitAuthorEmailPatternParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitAuthorEmailPatternParametersGraphQLField":
        self._alias = alias
        return self


class CommitCommentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitCommentGraphQLField":
        self._alias = alias
        return self


class CommitCommentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitCommentConnectionGraphQLField":
        self._alias = alias
        return self


class CommitCommentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitCommentEdgeGraphQLField":
        self._alias = alias
        return self


class CommitCommentThreadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitCommentThreadGraphQLField":
        self._alias = alias
        return self


class CommitConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitConnectionGraphQLField":
        self._alias = alias
        return self


class CommitContributionsByRepositoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitContributionsByRepositoryGraphQLField":
        self._alias = alias
        return self


class CommitEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitEdgeGraphQLField":
        self._alias = alias
        return self


class CommitHistoryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitHistoryConnectionGraphQLField":
        self._alias = alias
        return self


class CommitMessagePatternParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitMessagePatternParametersGraphQLField":
        self._alias = alias
        return self


class CommitterEmailPatternParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CommitterEmailPatternParametersGraphQLField":
        self._alias = alias
        return self


class ComparisonGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComparisonGraphQLField":
        self._alias = alias
        return self


class ComparisonCommitConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComparisonCommitConnectionGraphQLField":
        self._alias = alias
        return self


class ConnectedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConnectedEventGraphQLField":
        self._alias = alias
        return self


class ContributingGuidelinesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ContributingGuidelinesGraphQLField":
        self._alias = alias
        return self


class ContributionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ContributionGraphQLField":
        self._alias = alias
        return self


class ContributionCalendarGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ContributionCalendarGraphQLField":
        self._alias = alias
        return self


class ContributionCalendarDayGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ContributionCalendarDayGraphQLField":
        self._alias = alias
        return self


class ContributionCalendarMonthGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ContributionCalendarMonthGraphQLField":
        self._alias = alias
        return self


class ContributionCalendarWeekGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ContributionCalendarWeekGraphQLField":
        self._alias = alias
        return self


class ContributionsCollectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ContributionsCollectionGraphQLField":
        self._alias = alias
        return self


class ConvertProjectCardNoteToIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConvertProjectCardNoteToIssuePayloadGraphQLField":
        self._alias = alias
        return self


class ConvertProjectV2DraftIssueItemToIssuePayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ConvertProjectV2DraftIssueItemToIssuePayloadGraphQLField":
        self._alias = alias
        return self


class ConvertPullRequestToDraftPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConvertPullRequestToDraftPayloadGraphQLField":
        self._alias = alias
        return self


class ConvertToDraftEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConvertToDraftEventGraphQLField":
        self._alias = alias
        return self


class ConvertedNoteToIssueEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConvertedNoteToIssueEventGraphQLField":
        self._alias = alias
        return self


class ConvertedToDiscussionEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConvertedToDiscussionEventGraphQLField":
        self._alias = alias
        return self


class CopilotEndpointsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CopilotEndpointsGraphQLField":
        self._alias = alias
        return self


class CopyProjectV2PayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CopyProjectV2PayloadGraphQLField":
        self._alias = alias
        return self


class CreateAttributionInvitationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateAttributionInvitationPayloadGraphQLField":
        self._alias = alias
        return self


class CreateBranchProtectionRulePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateBranchProtectionRulePayloadGraphQLField":
        self._alias = alias
        return self


class CreateCheckRunPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateCheckRunPayloadGraphQLField":
        self._alias = alias
        return self


class CreateCheckSuitePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateCheckSuitePayloadGraphQLField":
        self._alias = alias
        return self


class CreateCommitOnBranchPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateCommitOnBranchPayloadGraphQLField":
        self._alias = alias
        return self


class CreateDeploymentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateDeploymentPayloadGraphQLField":
        self._alias = alias
        return self


class CreateDeploymentStatusPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateDeploymentStatusPayloadGraphQLField":
        self._alias = alias
        return self


class CreateDiscussionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateDiscussionPayloadGraphQLField":
        self._alias = alias
        return self


class CreateEnterpriseOrganizationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateEnterpriseOrganizationPayloadGraphQLField":
        self._alias = alias
        return self


class CreateEnvironmentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateEnvironmentPayloadGraphQLField":
        self._alias = alias
        return self


class CreateIpAllowListEntryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateIpAllowListEntryPayloadGraphQLField":
        self._alias = alias
        return self


class CreateIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateIssuePayloadGraphQLField":
        self._alias = alias
        return self


class CreateIssueTypePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateIssueTypePayloadGraphQLField":
        self._alias = alias
        return self


class CreateLabelPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateLabelPayloadGraphQLField":
        self._alias = alias
        return self


class CreateLinkedBranchPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateLinkedBranchPayloadGraphQLField":
        self._alias = alias
        return self


class CreateMigrationSourcePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateMigrationSourcePayloadGraphQLField":
        self._alias = alias
        return self


class CreateProjectPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateProjectPayloadGraphQLField":
        self._alias = alias
        return self


class CreateProjectV2FieldPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateProjectV2FieldPayloadGraphQLField":
        self._alias = alias
        return self


class CreateProjectV2PayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateProjectV2PayloadGraphQLField":
        self._alias = alias
        return self


class CreateProjectV2StatusUpdatePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateProjectV2StatusUpdatePayloadGraphQLField":
        self._alias = alias
        return self


class CreatePullRequestPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatePullRequestPayloadGraphQLField":
        self._alias = alias
        return self


class CreateRefPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateRefPayloadGraphQLField":
        self._alias = alias
        return self


class CreateRepositoryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateRepositoryPayloadGraphQLField":
        self._alias = alias
        return self


class CreateRepositoryRulesetPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateRepositoryRulesetPayloadGraphQLField":
        self._alias = alias
        return self


class CreateSponsorsListingPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateSponsorsListingPayloadGraphQLField":
        self._alias = alias
        return self


class CreateSponsorsTierPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateSponsorsTierPayloadGraphQLField":
        self._alias = alias
        return self


class CreateSponsorshipPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateSponsorshipPayloadGraphQLField":
        self._alias = alias
        return self


class CreateSponsorshipsPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateSponsorshipsPayloadGraphQLField":
        self._alias = alias
        return self


class CreateTeamDiscussionCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateTeamDiscussionCommentPayloadGraphQLField":
        self._alias = alias
        return self


class CreateTeamDiscussionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateTeamDiscussionPayloadGraphQLField":
        self._alias = alias
        return self


class CreateUserListPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateUserListPayloadGraphQLField":
        self._alias = alias
        return self


class CreatedCommitContributionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedCommitContributionGraphQLField":
        self._alias = alias
        return self


class CreatedCommitContributionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedCommitContributionConnectionGraphQLField":
        self._alias = alias
        return self


class CreatedCommitContributionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedCommitContributionEdgeGraphQLField":
        self._alias = alias
        return self


class CreatedIssueContributionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedIssueContributionGraphQLField":
        self._alias = alias
        return self


class CreatedIssueContributionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedIssueContributionConnectionGraphQLField":
        self._alias = alias
        return self


class CreatedIssueContributionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedIssueContributionEdgeGraphQLField":
        self._alias = alias
        return self


class CreatedIssueOrRestrictedContributionUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "CreatedIssueOrRestrictedContributionUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "CreatedIssueOrRestrictedContributionUnion":
        self._alias = alias
        return self


class CreatedPullRequestContributionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedPullRequestContributionGraphQLField":
        self._alias = alias
        return self


class CreatedPullRequestContributionConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CreatedPullRequestContributionConnectionGraphQLField":
        self._alias = alias
        return self


class CreatedPullRequestContributionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedPullRequestContributionEdgeGraphQLField":
        self._alias = alias
        return self


class CreatedPullRequestOrRestrictedContributionUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "CreatedPullRequestOrRestrictedContributionUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "CreatedPullRequestOrRestrictedContributionUnion":
        self._alias = alias
        return self


class CreatedPullRequestReviewContributionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedPullRequestReviewContributionGraphQLField":
        self._alias = alias
        return self


class CreatedPullRequestReviewContributionConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CreatedPullRequestReviewContributionConnectionGraphQLField":
        self._alias = alias
        return self


class CreatedPullRequestReviewContributionEdgeGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CreatedPullRequestReviewContributionEdgeGraphQLField":
        self._alias = alias
        return self


class CreatedRepositoryContributionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedRepositoryContributionGraphQLField":
        self._alias = alias
        return self


class CreatedRepositoryContributionConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CreatedRepositoryContributionConnectionGraphQLField":
        self._alias = alias
        return self


class CreatedRepositoryContributionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreatedRepositoryContributionEdgeGraphQLField":
        self._alias = alias
        return self


class CreatedRepositoryOrRestrictedContributionUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "CreatedRepositoryOrRestrictedContributionUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "CreatedRepositoryOrRestrictedContributionUnion":
        self._alias = alias
        return self


class CrossReferencedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CrossReferencedEventGraphQLField":
        self._alias = alias
        return self


class CvssSeveritiesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CvssSeveritiesGraphQLField":
        self._alias = alias
        return self


class DeclineTopicSuggestionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeclineTopicSuggestionPayloadGraphQLField":
        self._alias = alias
        return self


class DeletableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeletableGraphQLField":
        self._alias = alias
        return self


class DeleteBranchProtectionRulePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteBranchProtectionRulePayloadGraphQLField":
        self._alias = alias
        return self


class DeleteDeploymentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteDeploymentPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteDiscussionCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteDiscussionCommentPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteDiscussionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteDiscussionPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteEnvironmentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteEnvironmentPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteIpAllowListEntryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteIpAllowListEntryPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteIssueCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteIssueCommentPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteIssuePayloadGraphQLField":
        self._alias = alias
        return self


class DeleteIssueTypePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteIssueTypePayloadGraphQLField":
        self._alias = alias
        return self


class DeleteLabelPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteLabelPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteLinkedBranchPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteLinkedBranchPayloadGraphQLField":
        self._alias = alias
        return self


class DeletePackageVersionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeletePackageVersionPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteProjectCardPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProjectCardPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteProjectColumnPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProjectColumnPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteProjectPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProjectPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteProjectV2FieldPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProjectV2FieldPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteProjectV2ItemPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProjectV2ItemPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteProjectV2PayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProjectV2PayloadGraphQLField":
        self._alias = alias
        return self


class DeleteProjectV2StatusUpdatePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProjectV2StatusUpdatePayloadGraphQLField":
        self._alias = alias
        return self


class DeleteProjectV2WorkflowPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteProjectV2WorkflowPayloadGraphQLField":
        self._alias = alias
        return self


class DeletePullRequestReviewCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeletePullRequestReviewCommentPayloadGraphQLField":
        self._alias = alias
        return self


class DeletePullRequestReviewPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeletePullRequestReviewPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteRefPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteRefPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteRepositoryRulesetPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteRepositoryRulesetPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteTeamDiscussionCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteTeamDiscussionCommentPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteTeamDiscussionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteTeamDiscussionPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteUserListPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteUserListPayloadGraphQLField":
        self._alias = alias
        return self


class DeleteVerifiableDomainPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteVerifiableDomainPayloadGraphQLField":
        self._alias = alias
        return self


class DemilestonedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DemilestonedEventGraphQLField":
        self._alias = alias
        return self


class DependabotUpdateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DependabotUpdateGraphQLField":
        self._alias = alias
        return self


class DependabotUpdateErrorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DependabotUpdateErrorGraphQLField":
        self._alias = alias
        return self


class DependencyGraphDependencyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DependencyGraphDependencyGraphQLField":
        self._alias = alias
        return self


class DependencyGraphDependencyConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DependencyGraphDependencyConnectionGraphQLField":
        self._alias = alias
        return self


class DependencyGraphDependencyEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DependencyGraphDependencyEdgeGraphQLField":
        self._alias = alias
        return self


class DependencyGraphManifestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DependencyGraphManifestGraphQLField":
        self._alias = alias
        return self


class DependencyGraphManifestConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DependencyGraphManifestConnectionGraphQLField":
        self._alias = alias
        return self


class DependencyGraphManifestEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DependencyGraphManifestEdgeGraphQLField":
        self._alias = alias
        return self


class DeployKeyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeployKeyGraphQLField":
        self._alias = alias
        return self


class DeployKeyConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeployKeyConnectionGraphQLField":
        self._alias = alias
        return self


class DeployKeyEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeployKeyEdgeGraphQLField":
        self._alias = alias
        return self


class DeployedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeployedEventGraphQLField":
        self._alias = alias
        return self


class DeploymentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentGraphQLField":
        self._alias = alias
        return self


class DeploymentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentConnectionGraphQLField":
        self._alias = alias
        return self


class DeploymentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentEdgeGraphQLField":
        self._alias = alias
        return self


class DeploymentEnvironmentChangedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentEnvironmentChangedEventGraphQLField":
        self._alias = alias
        return self


class DeploymentProtectionRuleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentProtectionRuleGraphQLField":
        self._alias = alias
        return self


class DeploymentProtectionRuleConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentProtectionRuleConnectionGraphQLField":
        self._alias = alias
        return self


class DeploymentProtectionRuleEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentProtectionRuleEdgeGraphQLField":
        self._alias = alias
        return self


class DeploymentRequestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentRequestGraphQLField":
        self._alias = alias
        return self


class DeploymentRequestConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentRequestConnectionGraphQLField":
        self._alias = alias
        return self


class DeploymentRequestEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentRequestEdgeGraphQLField":
        self._alias = alias
        return self


class DeploymentReviewGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentReviewGraphQLField":
        self._alias = alias
        return self


class DeploymentReviewConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentReviewConnectionGraphQLField":
        self._alias = alias
        return self


class DeploymentReviewEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentReviewEdgeGraphQLField":
        self._alias = alias
        return self


class DeploymentReviewerUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "DeploymentReviewerUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "DeploymentReviewerUnion":
        self._alias = alias
        return self


class DeploymentReviewerConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentReviewerConnectionGraphQLField":
        self._alias = alias
        return self


class DeploymentReviewerEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentReviewerEdgeGraphQLField":
        self._alias = alias
        return self


class DeploymentStatusGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentStatusGraphQLField":
        self._alias = alias
        return self


class DeploymentStatusConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentStatusConnectionGraphQLField":
        self._alias = alias
        return self


class DeploymentStatusEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeploymentStatusEdgeGraphQLField":
        self._alias = alias
        return self


class DequeuePullRequestPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DequeuePullRequestPayloadGraphQLField":
        self._alias = alias
        return self


class DisablePullRequestAutoMergePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DisablePullRequestAutoMergePayloadGraphQLField":
        self._alias = alias
        return self


class DisconnectedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DisconnectedEventGraphQLField":
        self._alias = alias
        return self


class DiscussionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionGraphQLField":
        self._alias = alias
        return self


class DiscussionCategoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionCategoryGraphQLField":
        self._alias = alias
        return self


class DiscussionCategoryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionCategoryConnectionGraphQLField":
        self._alias = alias
        return self


class DiscussionCategoryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionCategoryEdgeGraphQLField":
        self._alias = alias
        return self


class DiscussionCommentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionCommentGraphQLField":
        self._alias = alias
        return self


class DiscussionCommentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionCommentConnectionGraphQLField":
        self._alias = alias
        return self


class DiscussionCommentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionCommentEdgeGraphQLField":
        self._alias = alias
        return self


class DiscussionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionConnectionGraphQLField":
        self._alias = alias
        return self


class DiscussionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionEdgeGraphQLField":
        self._alias = alias
        return self


class DiscussionPollGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionPollGraphQLField":
        self._alias = alias
        return self


class DiscussionPollOptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionPollOptionGraphQLField":
        self._alias = alias
        return self


class DiscussionPollOptionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionPollOptionConnectionGraphQLField":
        self._alias = alias
        return self


class DiscussionPollOptionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscussionPollOptionEdgeGraphQLField":
        self._alias = alias
        return self


class DismissPullRequestReviewPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DismissPullRequestReviewPayloadGraphQLField":
        self._alias = alias
        return self


class DismissRepositoryVulnerabilityAlertPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "DismissRepositoryVulnerabilityAlertPayloadGraphQLField":
        self._alias = alias
        return self


class DraftIssueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DraftIssueGraphQLField":
        self._alias = alias
        return self


class EPSSGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EPSSGraphQLField":
        self._alias = alias
        return self


class EnablePullRequestAutoMergePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnablePullRequestAutoMergePayloadGraphQLField":
        self._alias = alias
        return self


class EnqueuePullRequestPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnqueuePullRequestPayloadGraphQLField":
        self._alias = alias
        return self


class EnterpriseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseGraphQLField":
        self._alias = alias
        return self


class EnterpriseAdministratorConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseAdministratorConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseAdministratorEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseAdministratorEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseAdministratorInvitationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseAdministratorInvitationGraphQLField":
        self._alias = alias
        return self


class EnterpriseAdministratorInvitationConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "EnterpriseAdministratorInvitationConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseAdministratorInvitationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseAdministratorInvitationEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseAuditEntryDataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseAuditEntryDataGraphQLField":
        self._alias = alias
        return self


class EnterpriseBillingInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseBillingInfoGraphQLField":
        self._alias = alias
        return self


class EnterpriseConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseFailedInvitationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseFailedInvitationConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseFailedInvitationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseFailedInvitationEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseIdentityProviderGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseIdentityProviderGraphQLField":
        self._alias = alias
        return self


class EnterpriseMemberUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "EnterpriseMemberUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "EnterpriseMemberUnion":
        self._alias = alias
        return self


class EnterpriseMemberConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseMemberConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseMemberEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseMemberEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseMemberInvitationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseMemberInvitationGraphQLField":
        self._alias = alias
        return self


class EnterpriseMemberInvitationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseMemberInvitationConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseMemberInvitationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseMemberInvitationEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseOrganizationMembershipConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "EnterpriseOrganizationMembershipConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseOrganizationMembershipEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseOrganizationMembershipEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseOutsideCollaboratorConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "EnterpriseOutsideCollaboratorConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseOutsideCollaboratorEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseOutsideCollaboratorEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseOwnerInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseOwnerInfoGraphQLField":
        self._alias = alias
        return self


class EnterprisePendingMemberInvitationConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "EnterprisePendingMemberInvitationConnectionGraphQLField":
        self._alias = alias
        return self


class EnterprisePendingMemberInvitationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterprisePendingMemberInvitationEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseRepositoryInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseRepositoryInfoGraphQLField":
        self._alias = alias
        return self


class EnterpriseRepositoryInfoConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseRepositoryInfoConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseRepositoryInfoEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseRepositoryInfoEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerInstallationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseServerInstallationGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerInstallationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseServerInstallationConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerInstallationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseServerInstallationEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerInstallationMembershipConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "EnterpriseServerInstallationMembershipConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerInstallationMembershipEdgeGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "EnterpriseServerInstallationMembershipEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerUserAccountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseServerUserAccountGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerUserAccountConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseServerUserAccountConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerUserAccountEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseServerUserAccountEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerUserAccountEmailGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseServerUserAccountEmailGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerUserAccountEmailConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "EnterpriseServerUserAccountEmailConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerUserAccountEmailEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseServerUserAccountEmailEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerUserAccountsUploadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseServerUserAccountsUploadGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerUserAccountsUploadConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "EnterpriseServerUserAccountsUploadConnectionGraphQLField":
        self._alias = alias
        return self


class EnterpriseServerUserAccountsUploadEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseServerUserAccountsUploadEdgeGraphQLField":
        self._alias = alias
        return self


class EnterpriseUserAccountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnterpriseUserAccountGraphQLField":
        self._alias = alias
        return self


class EnvironmentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnvironmentGraphQLField":
        self._alias = alias
        return self


class EnvironmentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnvironmentConnectionGraphQLField":
        self._alias = alias
        return self


class EnvironmentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EnvironmentEdgeGraphQLField":
        self._alias = alias
        return self


class ExternalIdentityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExternalIdentityGraphQLField":
        self._alias = alias
        return self


class ExternalIdentityAttributeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExternalIdentityAttributeGraphQLField":
        self._alias = alias
        return self


class ExternalIdentityConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExternalIdentityConnectionGraphQLField":
        self._alias = alias
        return self


class ExternalIdentityEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExternalIdentityEdgeGraphQLField":
        self._alias = alias
        return self


class ExternalIdentitySamlAttributesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExternalIdentitySamlAttributesGraphQLField":
        self._alias = alias
        return self


class ExternalIdentityScimAttributesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ExternalIdentityScimAttributesGraphQLField":
        self._alias = alias
        return self


class FileExtensionRestrictionParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FileExtensionRestrictionParametersGraphQLField":
        self._alias = alias
        return self


class FilePathRestrictionParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FilePathRestrictionParametersGraphQLField":
        self._alias = alias
        return self


class FollowOrganizationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FollowOrganizationPayloadGraphQLField":
        self._alias = alias
        return self


class FollowUserPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FollowUserPayloadGraphQLField":
        self._alias = alias
        return self


class FollowerConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FollowerConnectionGraphQLField":
        self._alias = alias
        return self


class FollowingConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FollowingConnectionGraphQLField":
        self._alias = alias
        return self


class FundingLinkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FundingLinkGraphQLField":
        self._alias = alias
        return self


class GenericHovercardContextGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GenericHovercardContextGraphQLField":
        self._alias = alias
        return self


class GistGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GistGraphQLField":
        self._alias = alias
        return self


class GistCommentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GistCommentGraphQLField":
        self._alias = alias
        return self


class GistCommentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GistCommentConnectionGraphQLField":
        self._alias = alias
        return self


class GistCommentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GistCommentEdgeGraphQLField":
        self._alias = alias
        return self


class GistConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GistConnectionGraphQLField":
        self._alias = alias
        return self


class GistEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GistEdgeGraphQLField":
        self._alias = alias
        return self


class GistFileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GistFileGraphQLField":
        self._alias = alias
        return self


class GitActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GitActorGraphQLField":
        self._alias = alias
        return self


class GitActorConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GitActorConnectionGraphQLField":
        self._alias = alias
        return self


class GitActorEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GitActorEdgeGraphQLField":
        self._alias = alias
        return self


class GitHubMetadataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GitHubMetadataGraphQLField":
        self._alias = alias
        return self


class GitObjectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GitObjectGraphQLField":
        self._alias = alias
        return self


class GitSignatureGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GitSignatureGraphQLField":
        self._alias = alias
        return self


class GpgSignatureGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GpgSignatureGraphQLField":
        self._alias = alias
        return self


class GrantEnterpriseOrganizationsMigratorRolePayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "GrantEnterpriseOrganizationsMigratorRolePayloadGraphQLField":
        self._alias = alias
        return self


class GrantMigratorRolePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GrantMigratorRolePayloadGraphQLField":
        self._alias = alias
        return self


class HeadRefDeletedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HeadRefDeletedEventGraphQLField":
        self._alias = alias
        return self


class HeadRefForcePushedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HeadRefForcePushedEventGraphQLField":
        self._alias = alias
        return self


class HeadRefRestoredEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HeadRefRestoredEventGraphQLField":
        self._alias = alias
        return self


class HovercardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HovercardGraphQLField":
        self._alias = alias
        return self


class HovercardContextGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "HovercardContextGraphQLField":
        self._alias = alias
        return self


class ImportProjectPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ImportProjectPayloadGraphQLField":
        self._alias = alias
        return self


class InviteEnterpriseAdminPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "InviteEnterpriseAdminPayloadGraphQLField":
        self._alias = alias
        return self


class InviteEnterpriseMemberPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "InviteEnterpriseMemberPayloadGraphQLField":
        self._alias = alias
        return self


class IpAllowListEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IpAllowListEntryGraphQLField":
        self._alias = alias
        return self


class IpAllowListEntryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IpAllowListEntryConnectionGraphQLField":
        self._alias = alias
        return self


class IpAllowListEntryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IpAllowListEntryEdgeGraphQLField":
        self._alias = alias
        return self


class IpAllowListOwnerUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "IpAllowListOwnerUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "IpAllowListOwnerUnion":
        self._alias = alias
        return self


class IssueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueGraphQLField":
        self._alias = alias
        return self


class IssueCommentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueCommentGraphQLField":
        self._alias = alias
        return self


class IssueCommentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueCommentConnectionGraphQLField":
        self._alias = alias
        return self


class IssueCommentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueCommentEdgeGraphQLField":
        self._alias = alias
        return self


class IssueConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueConnectionGraphQLField":
        self._alias = alias
        return self


class IssueContributionsByRepositoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueContributionsByRepositoryGraphQLField":
        self._alias = alias
        return self


class IssueEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueEdgeGraphQLField":
        self._alias = alias
        return self


class IssueOrPullRequestUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "IssueOrPullRequestUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "IssueOrPullRequestUnion":
        self._alias = alias
        return self


class IssueTemplateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTemplateGraphQLField":
        self._alias = alias
        return self


class IssueTimelineConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTimelineConnectionGraphQLField":
        self._alias = alias
        return self


class IssueTimelineItemUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "IssueTimelineItemUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "IssueTimelineItemUnion":
        self._alias = alias
        return self


class IssueTimelineItemEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTimelineItemEdgeGraphQLField":
        self._alias = alias
        return self


class IssueTimelineItemsUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "IssueTimelineItemsUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "IssueTimelineItemsUnion":
        self._alias = alias
        return self


class IssueTimelineItemsConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTimelineItemsConnectionGraphQLField":
        self._alias = alias
        return self


class IssueTimelineItemsEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTimelineItemsEdgeGraphQLField":
        self._alias = alias
        return self


class IssueTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTypeGraphQLField":
        self._alias = alias
        return self


class IssueTypeAddedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTypeAddedEventGraphQLField":
        self._alias = alias
        return self


class IssueTypeChangedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTypeChangedEventGraphQLField":
        self._alias = alias
        return self


class IssueTypeConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTypeConnectionGraphQLField":
        self._alias = alias
        return self


class IssueTypeEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTypeEdgeGraphQLField":
        self._alias = alias
        return self


class IssueTypeRemovedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IssueTypeRemovedEventGraphQLField":
        self._alias = alias
        return self


class JoinedGitHubContributionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "JoinedGitHubContributionGraphQLField":
        self._alias = alias
        return self


class LabelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelGraphQLField":
        self._alias = alias
        return self


class LabelConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelConnectionGraphQLField":
        self._alias = alias
        return self


class LabelEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelEdgeGraphQLField":
        self._alias = alias
        return self


class LabelableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelableGraphQLField":
        self._alias = alias
        return self


class LabeledEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabeledEventGraphQLField":
        self._alias = alias
        return self


class LanguageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LanguageGraphQLField":
        self._alias = alias
        return self


class LanguageConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LanguageConnectionGraphQLField":
        self._alias = alias
        return self


class LanguageEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LanguageEdgeGraphQLField":
        self._alias = alias
        return self


class LicenseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LicenseGraphQLField":
        self._alias = alias
        return self


class LicenseRuleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LicenseRuleGraphQLField":
        self._alias = alias
        return self


class LinkProjectV2ToRepositoryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinkProjectV2ToRepositoryPayloadGraphQLField":
        self._alias = alias
        return self


class LinkProjectV2ToTeamPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinkProjectV2ToTeamPayloadGraphQLField":
        self._alias = alias
        return self


class LinkRepositoryToProjectPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinkRepositoryToProjectPayloadGraphQLField":
        self._alias = alias
        return self


class LinkedBranchGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinkedBranchGraphQLField":
        self._alias = alias
        return self


class LinkedBranchConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinkedBranchConnectionGraphQLField":
        self._alias = alias
        return self


class LinkedBranchEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinkedBranchEdgeGraphQLField":
        self._alias = alias
        return self


class LockLockablePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LockLockablePayloadGraphQLField":
        self._alias = alias
        return self


class LockableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LockableGraphQLField":
        self._alias = alias
        return self


class LockedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LockedEventGraphQLField":
        self._alias = alias
        return self


class MannequinGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MannequinGraphQLField":
        self._alias = alias
        return self


class MannequinConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MannequinConnectionGraphQLField":
        self._alias = alias
        return self


class MannequinEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MannequinEdgeGraphQLField":
        self._alias = alias
        return self


class MarkDiscussionCommentAsAnswerPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarkDiscussionCommentAsAnswerPayloadGraphQLField":
        self._alias = alias
        return self


class MarkFileAsViewedPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarkFileAsViewedPayloadGraphQLField":
        self._alias = alias
        return self


class MarkProjectV2AsTemplatePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarkProjectV2AsTemplatePayloadGraphQLField":
        self._alias = alias
        return self


class MarkPullRequestReadyForReviewPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarkPullRequestReadyForReviewPayloadGraphQLField":
        self._alias = alias
        return self


class MarkedAsDuplicateEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarkedAsDuplicateEventGraphQLField":
        self._alias = alias
        return self


class MarketplaceCategoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarketplaceCategoryGraphQLField":
        self._alias = alias
        return self


class MarketplaceListingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarketplaceListingGraphQLField":
        self._alias = alias
        return self


class MarketplaceListingConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarketplaceListingConnectionGraphQLField":
        self._alias = alias
        return self


class MarketplaceListingEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarketplaceListingEdgeGraphQLField":
        self._alias = alias
        return self


class MaxFilePathLengthParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MaxFilePathLengthParametersGraphQLField":
        self._alias = alias
        return self


class MaxFileSizeParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MaxFileSizeParametersGraphQLField":
        self._alias = alias
        return self


class MemberFeatureRequestNotificationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MemberFeatureRequestNotificationGraphQLField":
        self._alias = alias
        return self


class MemberStatusableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MemberStatusableGraphQLField":
        self._alias = alias
        return self


class MembersCanDeleteReposClearAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MembersCanDeleteReposClearAuditEntryGraphQLField":
        self._alias = alias
        return self


class MembersCanDeleteReposDisableAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MembersCanDeleteReposDisableAuditEntryGraphQLField":
        self._alias = alias
        return self


class MembersCanDeleteReposEnableAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MembersCanDeleteReposEnableAuditEntryGraphQLField":
        self._alias = alias
        return self


class MentionedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MentionedEventGraphQLField":
        self._alias = alias
        return self


class MergeBranchPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MergeBranchPayloadGraphQLField":
        self._alias = alias
        return self


class MergePullRequestPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MergePullRequestPayloadGraphQLField":
        self._alias = alias
        return self


class MergeQueueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MergeQueueGraphQLField":
        self._alias = alias
        return self


class MergeQueueConfigurationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MergeQueueConfigurationGraphQLField":
        self._alias = alias
        return self


class MergeQueueEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MergeQueueEntryGraphQLField":
        self._alias = alias
        return self


class MergeQueueEntryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MergeQueueEntryConnectionGraphQLField":
        self._alias = alias
        return self


class MergeQueueEntryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MergeQueueEntryEdgeGraphQLField":
        self._alias = alias
        return self


class MergeQueueParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MergeQueueParametersGraphQLField":
        self._alias = alias
        return self


class MergedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MergedEventGraphQLField":
        self._alias = alias
        return self


class MigrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MigrationGraphQLField":
        self._alias = alias
        return self


class MigrationSourceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MigrationSourceGraphQLField":
        self._alias = alias
        return self


class MilestoneGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MilestoneGraphQLField":
        self._alias = alias
        return self


class MilestoneConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MilestoneConnectionGraphQLField":
        self._alias = alias
        return self


class MilestoneEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MilestoneEdgeGraphQLField":
        self._alias = alias
        return self


class MilestoneItemUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "MilestoneItemUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "MilestoneItemUnion":
        self._alias = alias
        return self


class MilestonedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MilestonedEventGraphQLField":
        self._alias = alias
        return self


class MinimizableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MinimizableGraphQLField":
        self._alias = alias
        return self


class MinimizeCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MinimizeCommentPayloadGraphQLField":
        self._alias = alias
        return self


class MoveProjectCardPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MoveProjectCardPayloadGraphQLField":
        self._alias = alias
        return self


class MoveProjectColumnPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MoveProjectColumnPayloadGraphQLField":
        self._alias = alias
        return self


class MovedColumnsInProjectEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MovedColumnsInProjectEventGraphQLField":
        self._alias = alias
        return self


class NodeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NodeGraphQLField":
        self._alias = alias
        return self


class OIDCProviderGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OIDCProviderGraphQLField":
        self._alias = alias
        return self


class OauthApplicationAuditEntryDataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OauthApplicationAuditEntryDataGraphQLField":
        self._alias = alias
        return self


class OauthApplicationCreateAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OauthApplicationCreateAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgAddBillingManagerAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgAddBillingManagerAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgAddMemberAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgAddMemberAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgBlockUserAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgBlockUserAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgConfigDisableCollaboratorsOnlyAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgConfigDisableCollaboratorsOnlyAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgConfigEnableCollaboratorsOnlyAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgConfigEnableCollaboratorsOnlyAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgCreateAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgCreateAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgDisableOauthAppRestrictionsAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgDisableOauthAppRestrictionsAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgDisableSamlAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgDisableSamlAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgDisableTwoFactorRequirementAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgDisableTwoFactorRequirementAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgEnableOauthAppRestrictionsAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgEnableOauthAppRestrictionsAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgEnableSamlAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgEnableSamlAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgEnableTwoFactorRequirementAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgEnableTwoFactorRequirementAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgInviteMemberAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgInviteMemberAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgInviteToBusinessAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgInviteToBusinessAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgOauthAppAccessApprovedAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgOauthAppAccessApprovedAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgOauthAppAccessBlockedAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgOauthAppAccessBlockedAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgOauthAppAccessDeniedAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgOauthAppAccessDeniedAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgOauthAppAccessRequestedAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgOauthAppAccessRequestedAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgOauthAppAccessUnblockedAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgOauthAppAccessUnblockedAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgRemoveBillingManagerAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgRemoveBillingManagerAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgRemoveMemberAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgRemoveMemberAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgRemoveOutsideCollaboratorAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgRemoveOutsideCollaboratorAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgRestoreMemberAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgRestoreMemberAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgRestoreMemberAuditEntryMembershipUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "OrgRestoreMemberAuditEntryMembershipUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "OrgRestoreMemberAuditEntryMembershipUnion":
        self._alias = alias
        return self


class OrgRestoreMemberMembershipOrganizationAuditEntryDataGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgRestoreMemberMembershipOrganizationAuditEntryDataGraphQLField":
        self._alias = alias
        return self


class OrgRestoreMemberMembershipRepositoryAuditEntryDataGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgRestoreMemberMembershipRepositoryAuditEntryDataGraphQLField":
        self._alias = alias
        return self


class OrgRestoreMemberMembershipTeamAuditEntryDataGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgRestoreMemberMembershipTeamAuditEntryDataGraphQLField":
        self._alias = alias
        return self


class OrgUnblockUserAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgUnblockUserAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgUpdateDefaultRepositoryPermissionAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgUpdateDefaultRepositoryPermissionAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgUpdateMemberAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrgUpdateMemberAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgUpdateMemberRepositoryCreationPermissionAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgUpdateMemberRepositoryCreationPermissionAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrgUpdateMemberRepositoryInvitationPermissionAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "OrgUpdateMemberRepositoryInvitationPermissionAuditEntryGraphQLField":
        self._alias = alias
        return self


class OrganizationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationGraphQLField":
        self._alias = alias
        return self


class OrganizationAuditEntryUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "OrganizationAuditEntryUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "OrganizationAuditEntryUnion":
        self._alias = alias
        return self


class OrganizationAuditEntryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationAuditEntryConnectionGraphQLField":
        self._alias = alias
        return self


class OrganizationAuditEntryDataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationAuditEntryDataGraphQLField":
        self._alias = alias
        return self


class OrganizationAuditEntryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationAuditEntryEdgeGraphQLField":
        self._alias = alias
        return self


class OrganizationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationConnectionGraphQLField":
        self._alias = alias
        return self


class OrganizationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationEdgeGraphQLField":
        self._alias = alias
        return self


class OrganizationEnterpriseOwnerConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationEnterpriseOwnerConnectionGraphQLField":
        self._alias = alias
        return self


class OrganizationEnterpriseOwnerEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationEnterpriseOwnerEdgeGraphQLField":
        self._alias = alias
        return self


class OrganizationIdentityProviderGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationIdentityProviderGraphQLField":
        self._alias = alias
        return self


class OrganizationInvitationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationInvitationGraphQLField":
        self._alias = alias
        return self


class OrganizationInvitationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationInvitationConnectionGraphQLField":
        self._alias = alias
        return self


class OrganizationInvitationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationInvitationEdgeGraphQLField":
        self._alias = alias
        return self


class OrganizationMemberConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationMemberConnectionGraphQLField":
        self._alias = alias
        return self


class OrganizationMemberEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationMemberEdgeGraphQLField":
        self._alias = alias
        return self


class OrganizationMigrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationMigrationGraphQLField":
        self._alias = alias
        return self


class OrganizationOrUserUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "OrganizationOrUserUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "OrganizationOrUserUnion":
        self._alias = alias
        return self


class OrganizationTeamsHovercardContextGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationTeamsHovercardContextGraphQLField":
        self._alias = alias
        return self


class OrganizationsHovercardContextGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "OrganizationsHovercardContextGraphQLField":
        self._alias = alias
        return self


class PackageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageGraphQLField":
        self._alias = alias
        return self


class PackageConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageConnectionGraphQLField":
        self._alias = alias
        return self


class PackageEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageEdgeGraphQLField":
        self._alias = alias
        return self


class PackageFileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageFileGraphQLField":
        self._alias = alias
        return self


class PackageFileConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageFileConnectionGraphQLField":
        self._alias = alias
        return self


class PackageFileEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageFileEdgeGraphQLField":
        self._alias = alias
        return self


class PackageOwnerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageOwnerGraphQLField":
        self._alias = alias
        return self


class PackageStatisticsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageStatisticsGraphQLField":
        self._alias = alias
        return self


class PackageTagGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageTagGraphQLField":
        self._alias = alias
        return self


class PackageVersionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageVersionGraphQLField":
        self._alias = alias
        return self


class PackageVersionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageVersionConnectionGraphQLField":
        self._alias = alias
        return self


class PackageVersionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageVersionEdgeGraphQLField":
        self._alias = alias
        return self


class PackageVersionStatisticsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PackageVersionStatisticsGraphQLField":
        self._alias = alias
        return self


class PageInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PageInfoGraphQLField":
        self._alias = alias
        return self


class ParentIssueAddedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ParentIssueAddedEventGraphQLField":
        self._alias = alias
        return self


class ParentIssueRemovedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ParentIssueRemovedEventGraphQLField":
        self._alias = alias
        return self


class PermissionGranterUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "PermissionGranterUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "PermissionGranterUnion":
        self._alias = alias
        return self


class PermissionSourceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PermissionSourceGraphQLField":
        self._alias = alias
        return self


class PinEnvironmentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinEnvironmentPayloadGraphQLField":
        self._alias = alias
        return self


class PinIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinIssuePayloadGraphQLField":
        self._alias = alias
        return self


class PinnableItemUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "PinnableItemUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "PinnableItemUnion":
        self._alias = alias
        return self


class PinnableItemConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnableItemConnectionGraphQLField":
        self._alias = alias
        return self


class PinnableItemEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnableItemEdgeGraphQLField":
        self._alias = alias
        return self


class PinnedDiscussionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnedDiscussionGraphQLField":
        self._alias = alias
        return self


class PinnedDiscussionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnedDiscussionConnectionGraphQLField":
        self._alias = alias
        return self


class PinnedDiscussionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnedDiscussionEdgeGraphQLField":
        self._alias = alias
        return self


class PinnedEnvironmentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnedEnvironmentGraphQLField":
        self._alias = alias
        return self


class PinnedEnvironmentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnedEnvironmentConnectionGraphQLField":
        self._alias = alias
        return self


class PinnedEnvironmentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnedEnvironmentEdgeGraphQLField":
        self._alias = alias
        return self


class PinnedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnedEventGraphQLField":
        self._alias = alias
        return self


class PinnedIssueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnedIssueGraphQLField":
        self._alias = alias
        return self


class PinnedIssueConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnedIssueConnectionGraphQLField":
        self._alias = alias
        return self


class PinnedIssueEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PinnedIssueEdgeGraphQLField":
        self._alias = alias
        return self


class PrivateRepositoryForkingDisableAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "PrivateRepositoryForkingDisableAuditEntryGraphQLField":
        self._alias = alias
        return self


class PrivateRepositoryForkingEnableAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "PrivateRepositoryForkingEnableAuditEntryGraphQLField":
        self._alias = alias
        return self


class ProfileItemShowcaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProfileItemShowcaseGraphQLField":
        self._alias = alias
        return self


class ProfileOwnerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProfileOwnerGraphQLField":
        self._alias = alias
        return self


class ProjectGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectGraphQLField":
        self._alias = alias
        return self


class ProjectCardGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectCardGraphQLField":
        self._alias = alias
        return self


class ProjectCardConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectCardConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectCardEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectCardEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectCardItemUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "ProjectCardItemUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ProjectCardItemUnion":
        self._alias = alias
        return self


class ProjectColumnGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectColumnGraphQLField":
        self._alias = alias
        return self


class ProjectColumnConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectColumnConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectColumnEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectColumnEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectOwnerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectOwnerGraphQLField":
        self._alias = alias
        return self


class ProjectProgressGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectProgressGraphQLField":
        self._alias = alias
        return self


class ProjectV2GraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2GraphQLField":
        self._alias = alias
        return self


class ProjectV2ActorUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "ProjectV2ActorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ProjectV2ActorUnion":
        self._alias = alias
        return self


class ProjectV2ActorConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ActorConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2ActorEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ActorEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectV2ConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2EdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2EdgeGraphQLField":
        self._alias = alias
        return self


class ProjectV2FieldGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2FieldGraphQLField":
        self._alias = alias
        return self


class ProjectV2FieldCommonGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2FieldCommonGraphQLField":
        self._alias = alias
        return self


class ProjectV2FieldConfigurationUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "ProjectV2FieldConfigurationUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ProjectV2FieldConfigurationUnion":
        self._alias = alias
        return self


class ProjectV2FieldConfigurationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2FieldConfigurationConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2FieldConfigurationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2FieldConfigurationEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectV2FieldConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2FieldConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2FieldEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2FieldEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemContentUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "ProjectV2ItemContentUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ProjectV2ItemContentUnion":
        self._alias = alias
        return self


class ProjectV2ItemEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldDateValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldDateValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldIterationValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldIterationValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldLabelValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldLabelValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldMilestoneValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldMilestoneValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldNumberValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldNumberValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldPullRequestValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldPullRequestValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldRepositoryValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldRepositoryValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldReviewerValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldReviewerValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldSingleSelectValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldSingleSelectValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldTextValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldTextValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldUserValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldUserValueGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldValueUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "ProjectV2ItemFieldValueUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ProjectV2ItemFieldValueUnion":
        self._alias = alias
        return self


class ProjectV2ItemFieldValueCommonGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldValueCommonGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldValueConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldValueConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2ItemFieldValueEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ItemFieldValueEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectV2IterationFieldGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2IterationFieldGraphQLField":
        self._alias = alias
        return self


class ProjectV2IterationFieldConfigurationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2IterationFieldConfigurationGraphQLField":
        self._alias = alias
        return self


class ProjectV2IterationFieldIterationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2IterationFieldIterationGraphQLField":
        self._alias = alias
        return self


class ProjectV2OwnerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2OwnerGraphQLField":
        self._alias = alias
        return self


class ProjectV2RecentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2RecentGraphQLField":
        self._alias = alias
        return self


class ProjectV2SingleSelectFieldGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2SingleSelectFieldGraphQLField":
        self._alias = alias
        return self


class ProjectV2SingleSelectFieldOptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2SingleSelectFieldOptionGraphQLField":
        self._alias = alias
        return self


class ProjectV2SortByGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2SortByGraphQLField":
        self._alias = alias
        return self


class ProjectV2SortByConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2SortByConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2SortByEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2SortByEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectV2SortByFieldGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2SortByFieldGraphQLField":
        self._alias = alias
        return self


class ProjectV2SortByFieldConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2SortByFieldConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2SortByFieldEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2SortByFieldEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectV2StatusUpdateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2StatusUpdateGraphQLField":
        self._alias = alias
        return self


class ProjectV2StatusUpdateConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2StatusUpdateConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2StatusUpdateEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2StatusUpdateEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectV2ViewGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ViewGraphQLField":
        self._alias = alias
        return self


class ProjectV2ViewConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ViewConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2ViewEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2ViewEdgeGraphQLField":
        self._alias = alias
        return self


class ProjectV2WorkflowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2WorkflowGraphQLField":
        self._alias = alias
        return self


class ProjectV2WorkflowConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2WorkflowConnectionGraphQLField":
        self._alias = alias
        return self


class ProjectV2WorkflowEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ProjectV2WorkflowEdgeGraphQLField":
        self._alias = alias
        return self


class PropertyTargetDefinitionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PropertyTargetDefinitionGraphQLField":
        self._alias = alias
        return self


class PublicKeyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PublicKeyGraphQLField":
        self._alias = alias
        return self


class PublicKeyConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PublicKeyConnectionGraphQLField":
        self._alias = alias
        return self


class PublicKeyEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PublicKeyEdgeGraphQLField":
        self._alias = alias
        return self


class PublishSponsorsTierPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PublishSponsorsTierPayloadGraphQLField":
        self._alias = alias
        return self


class PullRequestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestGraphQLField":
        self._alias = alias
        return self


class PullRequestChangedFileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestChangedFileGraphQLField":
        self._alias = alias
        return self


class PullRequestChangedFileConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestChangedFileConnectionGraphQLField":
        self._alias = alias
        return self


class PullRequestChangedFileEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestChangedFileEdgeGraphQLField":
        self._alias = alias
        return self


class PullRequestCommitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestCommitGraphQLField":
        self._alias = alias
        return self


class PullRequestCommitCommentThreadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestCommitCommentThreadGraphQLField":
        self._alias = alias
        return self


class PullRequestCommitConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestCommitConnectionGraphQLField":
        self._alias = alias
        return self


class PullRequestCommitEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestCommitEdgeGraphQLField":
        self._alias = alias
        return self


class PullRequestConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestConnectionGraphQLField":
        self._alias = alias
        return self


class PullRequestContributionsByRepositoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestContributionsByRepositoryGraphQLField":
        self._alias = alias
        return self


class PullRequestEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestEdgeGraphQLField":
        self._alias = alias
        return self


class PullRequestParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestParametersGraphQLField":
        self._alias = alias
        return self


class PullRequestReviewGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestReviewGraphQLField":
        self._alias = alias
        return self


class PullRequestReviewCommentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestReviewCommentGraphQLField":
        self._alias = alias
        return self


class PullRequestReviewCommentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestReviewCommentConnectionGraphQLField":
        self._alias = alias
        return self


class PullRequestReviewCommentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestReviewCommentEdgeGraphQLField":
        self._alias = alias
        return self


class PullRequestReviewConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestReviewConnectionGraphQLField":
        self._alias = alias
        return self


class PullRequestReviewContributionsByRepositoryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "PullRequestReviewContributionsByRepositoryGraphQLField":
        self._alias = alias
        return self


class PullRequestReviewEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestReviewEdgeGraphQLField":
        self._alias = alias
        return self


class PullRequestReviewThreadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestReviewThreadGraphQLField":
        self._alias = alias
        return self


class PullRequestReviewThreadConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestReviewThreadConnectionGraphQLField":
        self._alias = alias
        return self


class PullRequestReviewThreadEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestReviewThreadEdgeGraphQLField":
        self._alias = alias
        return self


class PullRequestRevisionMarkerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestRevisionMarkerGraphQLField":
        self._alias = alias
        return self


class PullRequestTemplateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestTemplateGraphQLField":
        self._alias = alias
        return self


class PullRequestThreadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestThreadGraphQLField":
        self._alias = alias
        return self


class PullRequestTimelineConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestTimelineConnectionGraphQLField":
        self._alias = alias
        return self


class PullRequestTimelineItemUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "PullRequestTimelineItemUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "PullRequestTimelineItemUnion":
        self._alias = alias
        return self


class PullRequestTimelineItemEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestTimelineItemEdgeGraphQLField":
        self._alias = alias
        return self


class PullRequestTimelineItemsUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "PullRequestTimelineItemsUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "PullRequestTimelineItemsUnion":
        self._alias = alias
        return self


class PullRequestTimelineItemsConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestTimelineItemsConnectionGraphQLField":
        self._alias = alias
        return self


class PullRequestTimelineItemsEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PullRequestTimelineItemsEdgeGraphQLField":
        self._alias = alias
        return self


class PushGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PushGraphQLField":
        self._alias = alias
        return self


class PushAllowanceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PushAllowanceGraphQLField":
        self._alias = alias
        return self


class PushAllowanceActorUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "PushAllowanceActorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "PushAllowanceActorUnion":
        self._alias = alias
        return self


class PushAllowanceConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PushAllowanceConnectionGraphQLField":
        self._alias = alias
        return self


class PushAllowanceEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PushAllowanceEdgeGraphQLField":
        self._alias = alias
        return self


class RateLimitGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RateLimitGraphQLField":
        self._alias = alias
        return self


class ReactableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReactableGraphQLField":
        self._alias = alias
        return self


class ReactingUserConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReactingUserConnectionGraphQLField":
        self._alias = alias
        return self


class ReactingUserEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReactingUserEdgeGraphQLField":
        self._alias = alias
        return self


class ReactionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReactionGraphQLField":
        self._alias = alias
        return self


class ReactionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReactionConnectionGraphQLField":
        self._alias = alias
        return self


class ReactionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReactionEdgeGraphQLField":
        self._alias = alias
        return self


class ReactionGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReactionGroupGraphQLField":
        self._alias = alias
        return self


class ReactorUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "ReactorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ReactorUnion":
        self._alias = alias
        return self


class ReactorConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReactorConnectionGraphQLField":
        self._alias = alias
        return self


class ReactorEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReactorEdgeGraphQLField":
        self._alias = alias
        return self


class ReadyForReviewEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReadyForReviewEventGraphQLField":
        self._alias = alias
        return self


class RefGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RefGraphQLField":
        self._alias = alias
        return self


class RefConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RefConnectionGraphQLField":
        self._alias = alias
        return self


class RefEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RefEdgeGraphQLField":
        self._alias = alias
        return self


class RefNameConditionTargetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RefNameConditionTargetGraphQLField":
        self._alias = alias
        return self


class RefUpdateRuleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RefUpdateRuleGraphQLField":
        self._alias = alias
        return self


class ReferencedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReferencedEventGraphQLField":
        self._alias = alias
        return self


class ReferencedSubjectUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "ReferencedSubjectUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ReferencedSubjectUnion":
        self._alias = alias
        return self


class RegenerateEnterpriseIdentityProviderRecoveryCodesPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "RegenerateEnterpriseIdentityProviderRecoveryCodesPayloadGraphQLField":
        self._alias = alias
        return self


class RegenerateVerifiableDomainTokenPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RegenerateVerifiableDomainTokenPayloadGraphQLField":
        self._alias = alias
        return self


class RejectDeploymentsPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RejectDeploymentsPayloadGraphQLField":
        self._alias = alias
        return self


class ReleaseGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReleaseGraphQLField":
        self._alias = alias
        return self


class ReleaseAssetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReleaseAssetGraphQLField":
        self._alias = alias
        return self


class ReleaseAssetConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReleaseAssetConnectionGraphQLField":
        self._alias = alias
        return self


class ReleaseAssetEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReleaseAssetEdgeGraphQLField":
        self._alias = alias
        return self


class ReleaseConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReleaseConnectionGraphQLField":
        self._alias = alias
        return self


class ReleaseEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReleaseEdgeGraphQLField":
        self._alias = alias
        return self


class RemoveAssigneesFromAssignablePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveAssigneesFromAssignablePayloadGraphQLField":
        self._alias = alias
        return self


class RemoveEnterpriseAdminPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveEnterpriseAdminPayloadGraphQLField":
        self._alias = alias
        return self


class RemoveEnterpriseIdentityProviderPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RemoveEnterpriseIdentityProviderPayloadGraphQLField":
        self._alias = alias
        return self


class RemoveEnterpriseMemberPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveEnterpriseMemberPayloadGraphQLField":
        self._alias = alias
        return self


class RemoveEnterpriseOrganizationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveEnterpriseOrganizationPayloadGraphQLField":
        self._alias = alias
        return self


class RemoveEnterpriseSupportEntitlementPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RemoveEnterpriseSupportEntitlementPayloadGraphQLField":
        self._alias = alias
        return self


class RemoveLabelsFromLabelablePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveLabelsFromLabelablePayloadGraphQLField":
        self._alias = alias
        return self


class RemoveOutsideCollaboratorPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveOutsideCollaboratorPayloadGraphQLField":
        self._alias = alias
        return self


class RemoveReactionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveReactionPayloadGraphQLField":
        self._alias = alias
        return self


class RemoveStarPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveStarPayloadGraphQLField":
        self._alias = alias
        return self


class RemoveSubIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveSubIssuePayloadGraphQLField":
        self._alias = alias
        return self


class RemoveUpvotePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveUpvotePayloadGraphQLField":
        self._alias = alias
        return self


class RemovedFromMergeQueueEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemovedFromMergeQueueEventGraphQLField":
        self._alias = alias
        return self


class RemovedFromProjectEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemovedFromProjectEventGraphQLField":
        self._alias = alias
        return self


class RenamedTitleEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RenamedTitleEventGraphQLField":
        self._alias = alias
        return self


class RenamedTitleSubjectUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "RenamedTitleSubjectUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "RenamedTitleSubjectUnion":
        self._alias = alias
        return self


class ReopenDiscussionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReopenDiscussionPayloadGraphQLField":
        self._alias = alias
        return self


class ReopenIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReopenIssuePayloadGraphQLField":
        self._alias = alias
        return self


class ReopenPullRequestPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReopenPullRequestPayloadGraphQLField":
        self._alias = alias
        return self


class ReopenedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReopenedEventGraphQLField":
        self._alias = alias
        return self


class ReorderEnvironmentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReorderEnvironmentPayloadGraphQLField":
        self._alias = alias
        return self


class ReplaceActorsForAssignablePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReplaceActorsForAssignablePayloadGraphQLField":
        self._alias = alias
        return self


class RepoAccessAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepoAccessAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoAddMemberAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepoAddMemberAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoAddTopicAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepoAddTopicAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoArchivedAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepoArchivedAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoChangeMergeSettingAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepoChangeMergeSettingAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoConfigDisableAnonymousGitAccessAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepoConfigDisableAnonymousGitAccessAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoConfigDisableCollaboratorsOnlyAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepoConfigDisableCollaboratorsOnlyAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoConfigDisableContributorsOnlyAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepoConfigDisableContributorsOnlyAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoConfigDisableSockpuppetDisallowedAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepoConfigDisableSockpuppetDisallowedAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoConfigEnableAnonymousGitAccessAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepoConfigEnableAnonymousGitAccessAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoConfigEnableCollaboratorsOnlyAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepoConfigEnableCollaboratorsOnlyAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoConfigEnableContributorsOnlyAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepoConfigEnableContributorsOnlyAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoConfigEnableSockpuppetDisallowedAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepoConfigEnableSockpuppetDisallowedAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoConfigLockAnonymousGitAccessAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepoConfigLockAnonymousGitAccessAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoConfigUnlockAnonymousGitAccessAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepoConfigUnlockAnonymousGitAccessAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoCreateAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepoCreateAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoDestroyAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepoDestroyAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoRemoveMemberAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepoRemoveMemberAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepoRemoveTopicAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepoRemoveTopicAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepositoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryGraphQLField":
        self._alias = alias
        return self


class RepositoryAuditEntryDataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryAuditEntryDataGraphQLField":
        self._alias = alias
        return self


class RepositoryCodeownersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryCodeownersGraphQLField":
        self._alias = alias
        return self


class RepositoryCodeownersErrorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryCodeownersErrorGraphQLField":
        self._alias = alias
        return self


class RepositoryCollaboratorConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryCollaboratorConnectionGraphQLField":
        self._alias = alias
        return self


class RepositoryCollaboratorEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryCollaboratorEdgeGraphQLField":
        self._alias = alias
        return self


class RepositoryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryConnectionGraphQLField":
        self._alias = alias
        return self


class RepositoryContactLinkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryContactLinkGraphQLField":
        self._alias = alias
        return self


class RepositoryDiscussionAuthorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryDiscussionAuthorGraphQLField":
        self._alias = alias
        return self


class RepositoryDiscussionCommentAuthorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryDiscussionCommentAuthorGraphQLField":
        self._alias = alias
        return self


class RepositoryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryEdgeGraphQLField":
        self._alias = alias
        return self


class RepositoryIdConditionTargetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryIdConditionTargetGraphQLField":
        self._alias = alias
        return self


class RepositoryInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryInfoGraphQLField":
        self._alias = alias
        return self


class RepositoryInteractionAbilityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryInteractionAbilityGraphQLField":
        self._alias = alias
        return self


class RepositoryInvitationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryInvitationGraphQLField":
        self._alias = alias
        return self


class RepositoryInvitationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryInvitationConnectionGraphQLField":
        self._alias = alias
        return self


class RepositoryInvitationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryInvitationEdgeGraphQLField":
        self._alias = alias
        return self


class RepositoryMigrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryMigrationGraphQLField":
        self._alias = alias
        return self


class RepositoryMigrationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryMigrationConnectionGraphQLField":
        self._alias = alias
        return self


class RepositoryMigrationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryMigrationEdgeGraphQLField":
        self._alias = alias
        return self


class RepositoryNameConditionTargetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryNameConditionTargetGraphQLField":
        self._alias = alias
        return self


class RepositoryNodeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryNodeGraphQLField":
        self._alias = alias
        return self


class RepositoryOwnerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryOwnerGraphQLField":
        self._alias = alias
        return self


class RepositoryPlanFeaturesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryPlanFeaturesGraphQLField":
        self._alias = alias
        return self


class RepositoryPropertyConditionTargetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryPropertyConditionTargetGraphQLField":
        self._alias = alias
        return self


class RepositoryRuleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryRuleGraphQLField":
        self._alias = alias
        return self


class RepositoryRuleConditionsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryRuleConditionsGraphQLField":
        self._alias = alias
        return self


class RepositoryRuleConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryRuleConnectionGraphQLField":
        self._alias = alias
        return self


class RepositoryRuleEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryRuleEdgeGraphQLField":
        self._alias = alias
        return self


class RepositoryRulesetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryRulesetGraphQLField":
        self._alias = alias
        return self


class RepositoryRulesetBypassActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryRulesetBypassActorGraphQLField":
        self._alias = alias
        return self


class RepositoryRulesetBypassActorConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryRulesetBypassActorConnectionGraphQLField":
        self._alias = alias
        return self


class RepositoryRulesetBypassActorEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryRulesetBypassActorEdgeGraphQLField":
        self._alias = alias
        return self


class RepositoryRulesetConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryRulesetConnectionGraphQLField":
        self._alias = alias
        return self


class RepositoryRulesetEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryRulesetEdgeGraphQLField":
        self._alias = alias
        return self


class RepositoryTopicGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryTopicGraphQLField":
        self._alias = alias
        return self


class RepositoryTopicConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryTopicConnectionGraphQLField":
        self._alias = alias
        return self


class RepositoryTopicEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryTopicEdgeGraphQLField":
        self._alias = alias
        return self


class RepositoryVisibilityChangeDisableAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepositoryVisibilityChangeDisableAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepositoryVisibilityChangeEnableAuditEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RepositoryVisibilityChangeEnableAuditEntryGraphQLField":
        self._alias = alias
        return self


class RepositoryVulnerabilityAlertGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryVulnerabilityAlertGraphQLField":
        self._alias = alias
        return self


class RepositoryVulnerabilityAlertConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryVulnerabilityAlertConnectionGraphQLField":
        self._alias = alias
        return self


class RepositoryVulnerabilityAlertEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RepositoryVulnerabilityAlertEdgeGraphQLField":
        self._alias = alias
        return self


class ReprioritizeSubIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReprioritizeSubIssuePayloadGraphQLField":
        self._alias = alias
        return self


class RequestReviewsPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RequestReviewsPayloadGraphQLField":
        self._alias = alias
        return self


class RequestedReviewerUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "RequestedReviewerUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "RequestedReviewerUnion":
        self._alias = alias
        return self


class RequestedReviewerConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RequestedReviewerConnectionGraphQLField":
        self._alias = alias
        return self


class RequestedReviewerEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RequestedReviewerEdgeGraphQLField":
        self._alias = alias
        return self


class RequirableByPullRequestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RequirableByPullRequestGraphQLField":
        self._alias = alias
        return self


class RequiredDeploymentsParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RequiredDeploymentsParametersGraphQLField":
        self._alias = alias
        return self


class RequiredStatusCheckDescriptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RequiredStatusCheckDescriptionGraphQLField":
        self._alias = alias
        return self


class RequiredStatusChecksParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RequiredStatusChecksParametersGraphQLField":
        self._alias = alias
        return self


class RerequestCheckSuitePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RerequestCheckSuitePayloadGraphQLField":
        self._alias = alias
        return self


class ResolveReviewThreadPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ResolveReviewThreadPayloadGraphQLField":
        self._alias = alias
        return self


class RestrictedContributionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RestrictedContributionGraphQLField":
        self._alias = alias
        return self


class RetireSponsorsTierPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RetireSponsorsTierPayloadGraphQLField":
        self._alias = alias
        return self


class RevertPullRequestPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RevertPullRequestPayloadGraphQLField":
        self._alias = alias
        return self


class ReviewDismissalAllowanceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReviewDismissalAllowanceGraphQLField":
        self._alias = alias
        return self


class ReviewDismissalAllowanceActorUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "ReviewDismissalAllowanceActorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ReviewDismissalAllowanceActorUnion":
        self._alias = alias
        return self


class ReviewDismissalAllowanceConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReviewDismissalAllowanceConnectionGraphQLField":
        self._alias = alias
        return self


class ReviewDismissalAllowanceEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReviewDismissalAllowanceEdgeGraphQLField":
        self._alias = alias
        return self


class ReviewDismissedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReviewDismissedEventGraphQLField":
        self._alias = alias
        return self


class ReviewRequestGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReviewRequestGraphQLField":
        self._alias = alias
        return self


class ReviewRequestConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReviewRequestConnectionGraphQLField":
        self._alias = alias
        return self


class ReviewRequestEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReviewRequestEdgeGraphQLField":
        self._alias = alias
        return self


class ReviewRequestRemovedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReviewRequestRemovedEventGraphQLField":
        self._alias = alias
        return self


class ReviewRequestedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReviewRequestedEventGraphQLField":
        self._alias = alias
        return self


class ReviewStatusHovercardContextGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReviewStatusHovercardContextGraphQLField":
        self._alias = alias
        return self


class RevokeEnterpriseOrganizationsMigratorRolePayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RevokeEnterpriseOrganizationsMigratorRolePayloadGraphQLField":
        self._alias = alias
        return self


class RevokeMigratorRolePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RevokeMigratorRolePayloadGraphQLField":
        self._alias = alias
        return self


class RuleParametersUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "RuleParametersUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "RuleParametersUnion":
        self._alias = alias
        return self


class RuleSourceUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "RuleSourceUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "RuleSourceUnion":
        self._alias = alias
        return self


class SavedReplyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedReplyGraphQLField":
        self._alias = alias
        return self


class SavedReplyConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedReplyConnectionGraphQLField":
        self._alias = alias
        return self


class SavedReplyEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedReplyEdgeGraphQLField":
        self._alias = alias
        return self


class SearchResultItemUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "SearchResultItemUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "SearchResultItemUnion":
        self._alias = alias
        return self


class SearchResultItemConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SearchResultItemConnectionGraphQLField":
        self._alias = alias
        return self


class SearchResultItemEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SearchResultItemEdgeGraphQLField":
        self._alias = alias
        return self


class SecurityAdvisoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecurityAdvisoryGraphQLField":
        self._alias = alias
        return self


class SecurityAdvisoryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecurityAdvisoryConnectionGraphQLField":
        self._alias = alias
        return self


class SecurityAdvisoryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecurityAdvisoryEdgeGraphQLField":
        self._alias = alias
        return self


class SecurityAdvisoryIdentifierGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecurityAdvisoryIdentifierGraphQLField":
        self._alias = alias
        return self


class SecurityAdvisoryPackageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecurityAdvisoryPackageGraphQLField":
        self._alias = alias
        return self


class SecurityAdvisoryPackageVersionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecurityAdvisoryPackageVersionGraphQLField":
        self._alias = alias
        return self


class SecurityAdvisoryReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecurityAdvisoryReferenceGraphQLField":
        self._alias = alias
        return self


class SecurityVulnerabilityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecurityVulnerabilityGraphQLField":
        self._alias = alias
        return self


class SecurityVulnerabilityConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecurityVulnerabilityConnectionGraphQLField":
        self._alias = alias
        return self


class SecurityVulnerabilityEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SecurityVulnerabilityEdgeGraphQLField":
        self._alias = alias
        return self


class SetEnterpriseIdentityProviderPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetEnterpriseIdentityProviderPayloadGraphQLField":
        self._alias = alias
        return self


class SetOrganizationInteractionLimitPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetOrganizationInteractionLimitPayloadGraphQLField":
        self._alias = alias
        return self


class SetRepositoryInteractionLimitPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetRepositoryInteractionLimitPayloadGraphQLField":
        self._alias = alias
        return self


class SetUserInteractionLimitPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetUserInteractionLimitPayloadGraphQLField":
        self._alias = alias
        return self


class SmimeSignatureGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SmimeSignatureGraphQLField":
        self._alias = alias
        return self


class SocialAccountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SocialAccountGraphQLField":
        self._alias = alias
        return self


class SocialAccountConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SocialAccountConnectionGraphQLField":
        self._alias = alias
        return self


class SocialAccountEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SocialAccountEdgeGraphQLField":
        self._alias = alias
        return self


class SponsorUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "SponsorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "SponsorUnion":
        self._alias = alias
        return self


class SponsorAndLifetimeValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorAndLifetimeValueGraphQLField":
        self._alias = alias
        return self


class SponsorAndLifetimeValueConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorAndLifetimeValueConnectionGraphQLField":
        self._alias = alias
        return self


class SponsorAndLifetimeValueEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorAndLifetimeValueEdgeGraphQLField":
        self._alias = alias
        return self


class SponsorConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorConnectionGraphQLField":
        self._alias = alias
        return self


class SponsorEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorEdgeGraphQLField":
        self._alias = alias
        return self


class SponsorableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorableGraphQLField":
        self._alias = alias
        return self


class SponsorableItemUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "SponsorableItemUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "SponsorableItemUnion":
        self._alias = alias
        return self


class SponsorableItemConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorableItemConnectionGraphQLField":
        self._alias = alias
        return self


class SponsorableItemEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorableItemEdgeGraphQLField":
        self._alias = alias
        return self


class SponsorsActivityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorsActivityGraphQLField":
        self._alias = alias
        return self


class SponsorsActivityConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorsActivityConnectionGraphQLField":
        self._alias = alias
        return self


class SponsorsActivityEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorsActivityEdgeGraphQLField":
        self._alias = alias
        return self


class SponsorsGoalGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorsGoalGraphQLField":
        self._alias = alias
        return self


class SponsorsListingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorsListingGraphQLField":
        self._alias = alias
        return self


class SponsorsListingFeatureableItemUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "SponsorsListingFeatureableItemUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "SponsorsListingFeatureableItemUnion":
        self._alias = alias
        return self


class SponsorsListingFeaturedItemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorsListingFeaturedItemGraphQLField":
        self._alias = alias
        return self


class SponsorsTierGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorsTierGraphQLField":
        self._alias = alias
        return self


class SponsorsTierAdminInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorsTierAdminInfoGraphQLField":
        self._alias = alias
        return self


class SponsorsTierConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorsTierConnectionGraphQLField":
        self._alias = alias
        return self


class SponsorsTierEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorsTierEdgeGraphQLField":
        self._alias = alias
        return self


class SponsorshipGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorshipGraphQLField":
        self._alias = alias
        return self


class SponsorshipConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorshipConnectionGraphQLField":
        self._alias = alias
        return self


class SponsorshipEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorshipEdgeGraphQLField":
        self._alias = alias
        return self


class SponsorshipNewsletterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorshipNewsletterGraphQLField":
        self._alias = alias
        return self


class SponsorshipNewsletterConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorshipNewsletterConnectionGraphQLField":
        self._alias = alias
        return self


class SponsorshipNewsletterEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SponsorshipNewsletterEdgeGraphQLField":
        self._alias = alias
        return self


class SshSignatureGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SshSignatureGraphQLField":
        self._alias = alias
        return self


class StargazerConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StargazerConnectionGraphQLField":
        self._alias = alias
        return self


class StargazerEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StargazerEdgeGraphQLField":
        self._alias = alias
        return self


class StarrableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StarrableGraphQLField":
        self._alias = alias
        return self


class StarredRepositoryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StarredRepositoryConnectionGraphQLField":
        self._alias = alias
        return self


class StarredRepositoryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StarredRepositoryEdgeGraphQLField":
        self._alias = alias
        return self


class StartOrganizationMigrationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StartOrganizationMigrationPayloadGraphQLField":
        self._alias = alias
        return self


class StartRepositoryMigrationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StartRepositoryMigrationPayloadGraphQLField":
        self._alias = alias
        return self


class StatusGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StatusGraphQLField":
        self._alias = alias
        return self


class StatusCheckConfigurationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StatusCheckConfigurationGraphQLField":
        self._alias = alias
        return self


class StatusCheckRollupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StatusCheckRollupGraphQLField":
        self._alias = alias
        return self


class StatusCheckRollupContextUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "StatusCheckRollupContextUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "StatusCheckRollupContextUnion":
        self._alias = alias
        return self


class StatusCheckRollupContextConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StatusCheckRollupContextConnectionGraphQLField":
        self._alias = alias
        return self


class StatusCheckRollupContextEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StatusCheckRollupContextEdgeGraphQLField":
        self._alias = alias
        return self


class StatusContextGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StatusContextGraphQLField":
        self._alias = alias
        return self


class StatusContextStateCountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StatusContextStateCountGraphQLField":
        self._alias = alias
        return self


class StripeConnectAccountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StripeConnectAccountGraphQLField":
        self._alias = alias
        return self


class SubIssueAddedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubIssueAddedEventGraphQLField":
        self._alias = alias
        return self


class SubIssueRemovedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubIssueRemovedEventGraphQLField":
        self._alias = alias
        return self


class SubIssuesSummaryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubIssuesSummaryGraphQLField":
        self._alias = alias
        return self


class SubmitPullRequestReviewPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubmitPullRequestReviewPayloadGraphQLField":
        self._alias = alias
        return self


class SubmoduleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubmoduleGraphQLField":
        self._alias = alias
        return self


class SubmoduleConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubmoduleConnectionGraphQLField":
        self._alias = alias
        return self


class SubmoduleEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubmoduleEdgeGraphQLField":
        self._alias = alias
        return self


class SubscribableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubscribableGraphQLField":
        self._alias = alias
        return self


class SubscribableThreadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubscribableThreadGraphQLField":
        self._alias = alias
        return self


class SubscribedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubscribedEventGraphQLField":
        self._alias = alias
        return self


class SuggestedReviewerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SuggestedReviewerGraphQLField":
        self._alias = alias
        return self


class TagGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TagGraphQLField":
        self._alias = alias
        return self


class TagNamePatternParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TagNamePatternParametersGraphQLField":
        self._alias = alias
        return self


class TeamGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamGraphQLField":
        self._alias = alias
        return self


class TeamAddMemberAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamAddMemberAuditEntryGraphQLField":
        self._alias = alias
        return self


class TeamAddRepositoryAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamAddRepositoryAuditEntryGraphQLField":
        self._alias = alias
        return self


class TeamAuditEntryDataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamAuditEntryDataGraphQLField":
        self._alias = alias
        return self


class TeamChangeParentTeamAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamChangeParentTeamAuditEntryGraphQLField":
        self._alias = alias
        return self


class TeamConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamConnectionGraphQLField":
        self._alias = alias
        return self


class TeamDiscussionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamDiscussionGraphQLField":
        self._alias = alias
        return self


class TeamDiscussionCommentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamDiscussionCommentGraphQLField":
        self._alias = alias
        return self


class TeamDiscussionCommentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamDiscussionCommentConnectionGraphQLField":
        self._alias = alias
        return self


class TeamDiscussionCommentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamDiscussionCommentEdgeGraphQLField":
        self._alias = alias
        return self


class TeamDiscussionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamDiscussionConnectionGraphQLField":
        self._alias = alias
        return self


class TeamDiscussionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamDiscussionEdgeGraphQLField":
        self._alias = alias
        return self


class TeamEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamEdgeGraphQLField":
        self._alias = alias
        return self


class TeamMemberConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamMemberConnectionGraphQLField":
        self._alias = alias
        return self


class TeamMemberEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamMemberEdgeGraphQLField":
        self._alias = alias
        return self


class TeamRemoveMemberAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamRemoveMemberAuditEntryGraphQLField":
        self._alias = alias
        return self


class TeamRemoveRepositoryAuditEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamRemoveRepositoryAuditEntryGraphQLField":
        self._alias = alias
        return self


class TeamRepositoryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamRepositoryConnectionGraphQLField":
        self._alias = alias
        return self


class TeamRepositoryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TeamRepositoryEdgeGraphQLField":
        self._alias = alias
        return self


class TextMatchGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TextMatchGraphQLField":
        self._alias = alias
        return self


class TextMatchHighlightGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TextMatchHighlightGraphQLField":
        self._alias = alias
        return self


class TopicGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TopicGraphQLField":
        self._alias = alias
        return self


class TopicAuditEntryDataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TopicAuditEntryDataGraphQLField":
        self._alias = alias
        return self


class TransferEnterpriseOrganizationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TransferEnterpriseOrganizationPayloadGraphQLField":
        self._alias = alias
        return self


class TransferIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TransferIssuePayloadGraphQLField":
        self._alias = alias
        return self


class TransferredEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TransferredEventGraphQLField":
        self._alias = alias
        return self


class TreeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TreeGraphQLField":
        self._alias = alias
        return self


class TreeEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TreeEntryGraphQLField":
        self._alias = alias
        return self


class UnarchiveProjectV2ItemPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnarchiveProjectV2ItemPayloadGraphQLField":
        self._alias = alias
        return self


class UnarchiveRepositoryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnarchiveRepositoryPayloadGraphQLField":
        self._alias = alias
        return self


class UnassignedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnassignedEventGraphQLField":
        self._alias = alias
        return self


class UnfollowOrganizationPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnfollowOrganizationPayloadGraphQLField":
        self._alias = alias
        return self


class UnfollowUserPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnfollowUserPayloadGraphQLField":
        self._alias = alias
        return self


class UniformResourceLocatableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UniformResourceLocatableGraphQLField":
        self._alias = alias
        return self


class UnknownSignatureGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnknownSignatureGraphQLField":
        self._alias = alias
        return self


class UnlabeledEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnlabeledEventGraphQLField":
        self._alias = alias
        return self


class UnlinkProjectV2FromRepositoryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnlinkProjectV2FromRepositoryPayloadGraphQLField":
        self._alias = alias
        return self


class UnlinkProjectV2FromTeamPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnlinkProjectV2FromTeamPayloadGraphQLField":
        self._alias = alias
        return self


class UnlinkRepositoryFromProjectPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnlinkRepositoryFromProjectPayloadGraphQLField":
        self._alias = alias
        return self


class UnlockLockablePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnlockLockablePayloadGraphQLField":
        self._alias = alias
        return self


class UnlockedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnlockedEventGraphQLField":
        self._alias = alias
        return self


class UnmarkDiscussionCommentAsAnswerPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnmarkDiscussionCommentAsAnswerPayloadGraphQLField":
        self._alias = alias
        return self


class UnmarkFileAsViewedPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnmarkFileAsViewedPayloadGraphQLField":
        self._alias = alias
        return self


class UnmarkIssueAsDuplicatePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnmarkIssueAsDuplicatePayloadGraphQLField":
        self._alias = alias
        return self


class UnmarkProjectV2AsTemplatePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnmarkProjectV2AsTemplatePayloadGraphQLField":
        self._alias = alias
        return self


class UnmarkedAsDuplicateEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnmarkedAsDuplicateEventGraphQLField":
        self._alias = alias
        return self


class UnminimizeCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnminimizeCommentPayloadGraphQLField":
        self._alias = alias
        return self


class UnpinIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnpinIssuePayloadGraphQLField":
        self._alias = alias
        return self


class UnpinnedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnpinnedEventGraphQLField":
        self._alias = alias
        return self


class UnresolveReviewThreadPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnresolveReviewThreadPayloadGraphQLField":
        self._alias = alias
        return self


class UnsubscribedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnsubscribedEventGraphQLField":
        self._alias = alias
        return self


class UpdatableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdatableGraphQLField":
        self._alias = alias
        return self


class UpdatableCommentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdatableCommentGraphQLField":
        self._alias = alias
        return self


class UpdateBranchProtectionRulePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateBranchProtectionRulePayloadGraphQLField":
        self._alias = alias
        return self


class UpdateCheckRunPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateCheckRunPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateCheckSuitePreferencesPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateCheckSuitePreferencesPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateDiscussionCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateDiscussionCommentPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateDiscussionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateDiscussionPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseAdministratorRolePayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseAdministratorRolePayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseDefaultRepositoryPermissionSettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseDefaultRepositoryPermissionSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseDeployKeySettingPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseDeployKeySettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> (
        "UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayloadGraphQLField"
    ):
        self._alias = alias
        return self


class UpdateEnterpriseMembersCanCreateRepositoriesSettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseMembersCanCreateRepositoriesSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseMembersCanDeleteIssuesSettingPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseMembersCanDeleteIssuesSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseMembersCanMakePurchasesSettingPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseMembersCanMakePurchasesSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseOrganizationProjectsSettingPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseOrganizationProjectsSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseOwnerOrganizationRolePayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseOwnerOrganizationRolePayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseProfilePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateEnterpriseProfilePayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseRepositoryProjectsSettingPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseRepositoryProjectsSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseTeamDiscussionsSettingPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseTeamDiscussionsSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseTwoFactorAuthenticationDisallowedMethodsSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateEnvironmentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateEnvironmentPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateIpAllowListEnabledSettingPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateIpAllowListEnabledSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateIpAllowListEntryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateIpAllowListEntryPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateIpAllowListForInstalledAppsEnabledSettingPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateIpAllowListForInstalledAppsEnabledSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateIssueCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateIssueCommentPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateIssueIssueTypePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateIssueIssueTypePayloadGraphQLField":
        self._alias = alias
        return self


class UpdateIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateIssuePayloadGraphQLField":
        self._alias = alias
        return self


class UpdateIssueTypePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateIssueTypePayloadGraphQLField":
        self._alias = alias
        return self


class UpdateLabelPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateLabelPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateNotificationRestrictionSettingPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateNotificationRestrictionSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateOrganizationAllowPrivateRepositoryForkingSettingPayloadGraphQLField(
    GraphQLField
):
    def alias(
        self, alias: str
    ) -> "UpdateOrganizationAllowPrivateRepositoryForkingSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateOrganizationWebCommitSignoffSettingPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateOrganizationWebCommitSignoffSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateParametersGraphQLField":
        self._alias = alias
        return self


class UpdatePatreonSponsorabilityPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdatePatreonSponsorabilityPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateProjectCardPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProjectCardPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateProjectColumnPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProjectColumnPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateProjectPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProjectPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateProjectV2CollaboratorsPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProjectV2CollaboratorsPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateProjectV2DraftIssuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProjectV2DraftIssuePayloadGraphQLField":
        self._alias = alias
        return self


class UpdateProjectV2FieldPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProjectV2FieldPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateProjectV2ItemFieldValuePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProjectV2ItemFieldValuePayloadGraphQLField":
        self._alias = alias
        return self


class UpdateProjectV2ItemPositionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProjectV2ItemPositionPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateProjectV2PayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProjectV2PayloadGraphQLField":
        self._alias = alias
        return self


class UpdateProjectV2StatusUpdatePayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateProjectV2StatusUpdatePayloadGraphQLField":
        self._alias = alias
        return self


class UpdatePullRequestBranchPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdatePullRequestBranchPayloadGraphQLField":
        self._alias = alias
        return self


class UpdatePullRequestPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdatePullRequestPayloadGraphQLField":
        self._alias = alias
        return self


class UpdatePullRequestReviewCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdatePullRequestReviewCommentPayloadGraphQLField":
        self._alias = alias
        return self


class UpdatePullRequestReviewPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdatePullRequestReviewPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateRefPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateRefPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateRefsPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateRefsPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateRepositoryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateRepositoryPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateRepositoryRulesetPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateRepositoryRulesetPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateRepositoryWebCommitSignoffSettingPayloadGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "UpdateRepositoryWebCommitSignoffSettingPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateSponsorshipPreferencesPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateSponsorshipPreferencesPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateSubscriptionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateSubscriptionPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateTeamDiscussionCommentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateTeamDiscussionCommentPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateTeamDiscussionPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateTeamDiscussionPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateTeamReviewAssignmentPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateTeamReviewAssignmentPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateTeamsRepositoryPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateTeamsRepositoryPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateTopicsPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateTopicsPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateUserListPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateUserListPayloadGraphQLField":
        self._alias = alias
        return self


class UpdateUserListsForItemPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateUserListsForItemPayloadGraphQLField":
        self._alias = alias
        return self


class UserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserGraphQLField":
        self._alias = alias
        return self


class UserBlockedEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserBlockedEventGraphQLField":
        self._alias = alias
        return self


class UserConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserConnectionGraphQLField":
        self._alias = alias
        return self


class UserContentEditGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserContentEditGraphQLField":
        self._alias = alias
        return self


class UserContentEditConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserContentEditConnectionGraphQLField":
        self._alias = alias
        return self


class UserContentEditEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserContentEditEdgeGraphQLField":
        self._alias = alias
        return self


class UserEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserEdgeGraphQLField":
        self._alias = alias
        return self


class UserEmailMetadataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserEmailMetadataGraphQLField":
        self._alias = alias
        return self


class UserListGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserListGraphQLField":
        self._alias = alias
        return self


class UserListConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserListConnectionGraphQLField":
        self._alias = alias
        return self


class UserListEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserListEdgeGraphQLField":
        self._alias = alias
        return self


class UserListItemsUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "UserListItemsUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "UserListItemsUnion":
        self._alias = alias
        return self


class UserListItemsConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserListItemsConnectionGraphQLField":
        self._alias = alias
        return self


class UserListItemsEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserListItemsEdgeGraphQLField":
        self._alias = alias
        return self


class UserListSuggestionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserListSuggestionGraphQLField":
        self._alias = alias
        return self


class UserNamespaceRepositoryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserNamespaceRepositoryGraphQLField":
        self._alias = alias
        return self


class UserNamespaceRepositoryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserNamespaceRepositoryConnectionGraphQLField":
        self._alias = alias
        return self


class UserNamespaceRepositoryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserNamespaceRepositoryEdgeGraphQLField":
        self._alias = alias
        return self


class UserStatusGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserStatusGraphQLField":
        self._alias = alias
        return self


class UserStatusConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserStatusConnectionGraphQLField":
        self._alias = alias
        return self


class UserStatusEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserStatusEdgeGraphQLField":
        self._alias = alias
        return self


class VerifiableDomainGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VerifiableDomainGraphQLField":
        self._alias = alias
        return self


class VerifiableDomainConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VerifiableDomainConnectionGraphQLField":
        self._alias = alias
        return self


class VerifiableDomainEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VerifiableDomainEdgeGraphQLField":
        self._alias = alias
        return self


class VerifiableDomainOwnerUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "VerifiableDomainOwnerUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "VerifiableDomainOwnerUnion":
        self._alias = alias
        return self


class VerifyVerifiableDomainPayloadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VerifyVerifiableDomainPayloadGraphQLField":
        self._alias = alias
        return self


class ViewerHovercardContextGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ViewerHovercardContextGraphQLField":
        self._alias = alias
        return self


class VotableGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VotableGraphQLField":
        self._alias = alias
        return self


class WorkflowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkflowGraphQLField":
        self._alias = alias
        return self


class WorkflowFileReferenceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkflowFileReferenceGraphQLField":
        self._alias = alias
        return self


class WorkflowRunGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkflowRunGraphQLField":
        self._alias = alias
        return self


class WorkflowRunConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkflowRunConnectionGraphQLField":
        self._alias = alias
        return self


class WorkflowRunEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkflowRunEdgeGraphQLField":
        self._alias = alias
        return self


class WorkflowRunFileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkflowRunFileGraphQLField":
        self._alias = alias
        return self


class WorkflowsParametersGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkflowsParametersGraphQLField":
        self._alias = alias
        return self
